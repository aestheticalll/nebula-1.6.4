package nebula.client.module.impl.exploit.phase;

import nebula.client.listener.bus.Listener;
import nebula.client.listener.bus.Subscribe;
import nebula.client.listener.event.player.EventMove;
import nebula.client.listener.event.player.EventNoClip;
import nebula.client.module.Module;
import nebula.client.module.ModuleMeta;
import nebula.client.util.value.Setting;
import nebula.client.util.value.SettingMeta;

/**
 * @author Gavin
 * @since 08/26/23
 */
@SuppressWarnings("unused")
@ModuleMeta(name = "Phase",
  description = "Phases through blocks")
public class PhaseModule extends Module {

  @SettingMeta("Mode")
  private final Setting<PhaseMode> mode = new Setting<>(
    PhaseMode.NO_CLIP);

  @Subscribe
  private final Listener<EventMove> move = event -> {
    if (mode.value() == PhaseMode.NO_CLIP) {
      event.setY(0);
      mc.thePlayer.motionY = 0;
    }
  };

  @Subscribe
  private final Listener<EventNoClip> noClip = event -> {
    if (mc.thePlayer == null || mc.theWorld == null) return;

    if (event.entity().equals(mc.thePlayer)) event.setCanceled(true);
  };
}
